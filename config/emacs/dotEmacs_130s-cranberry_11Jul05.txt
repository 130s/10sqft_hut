;from cns.sfc/2005/sep/27
; windowに色をつける
(cond
 ((and window-system (string-match "^19" emacs-version))
  (require 'hilit19)))

(setq mh-letter-mode-hook
      (function
         (lambda ()
(setq mh-ins-buf-prefix ">")
(setq mh-yank-from-start-of-msg 'body)
(turn-on-auto-fill))))

;;----------------------------------------------
;;Mewの設定
;;----------------------------------------------
(autoload 'mew "mew" nil t)
(setq exec-path (cons "/usr/local/bin/mh" exec-path))
(setq mew-header-max-length 100)
(setq mew-header-max-depth 100)
(setq mew-from "ISAO Saito <130s@2000.jukuin.keio.ac.jp>")

;;; リスプの起動
;;
;;  NL1
;;

(setq inferior-lisp-program "gcl")

(setq default-kanji-process-code 3)

(defun save-buffer-euc ()
  (interactive)
  (let ((lisp-mode "lisp-mode")
	(mode major-mode))
    (if (string= mode lisp-mode)
	(progn (setq kanji-fileio-code 3)
	       (save-buffer)
	       (message "Save buffer in EUC.")
	       (setq kanji-fileio-code 1)
	       (change-fileio-code)))))

(define-key lisp-mode-map "\C-x\C-s" 'save-buffer-euc)

(setq auto-mode-alist (cons '("\\.dic$" . lisp-mode)
			    (cons '("\\.grm$" . lisp-mode) auto-mode-alist)))

;for GCL use
(setq inferior-lisp-program "gcl")

;;Swap \C-h on delete-backward-char
;(load-library "term/keyswap")
;(if (eq window-system 'x)
;    (progn
;      (define-keyfunction-key-map [delete] [8])
;      (put 'delete 'ascii-character 8)))
(keyboard-translate ?\C-h ?\C-?)
(global-set-key "\C-h" nil)

;ime/2005/oct/15
(global-set-key "\C-o" 'mw32-ime-toggle)

;2005/nov/10/setting color
;http://home.att.ne.jp/alpha/z123/elisp-j.html
(if window-system (progn

  ;; 文字の色を設定します。
  (set-foreground-color "aquamarine")
  ;; 背景色を設定します。
  (set-background-color "gold4")
;;;  (set-background-color "DarkSlateGrey")
;;;  (set-background-color "SlateBlue")
  ;; モードラインの文字の色を設定します。
  (set-face-foreground 'modeline "white")
  ;; モードラインの背景色を設定します。
  (set-face-background 'modeline "MediumPurple2")
  ;; カーソルの色を設定します。
  (set-cursor-color "MediumPurple2")
  ;; マウスポインタの色を設定します。
  (set-mouse-color  "MediumPurple2")

))

;; For folding a line by specified number of characters
(add-hook 'text-mode-hook
          '(lambda ()
             (setq fill-column 78)
;             (auto-fill-mode 1)
             ))

;; Creating short cut
(set-register ?j '(file . "/Users/isaosaito/dropbox/Dropbox/contents_nomadic/Career/JobSuchen/jobSuchen.log"))
(set-register ?d '(file . "/Users/isaosaito/dropbox/Dropbox/periodic/2010/4q_2010/Nov2010"))
(set-register ?c '(file . "/Users/isaosaito/dropbox/Dropbox/contents_nomadic/academic/MSSE_SMU/Class_SMU/"))
